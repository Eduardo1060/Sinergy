/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;
import Model.Ferramenta;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.math. BigDecimal;

/**
 *
 * @author gustav
 */
public class GerenciaFerramenta extends javax.swing.JFrame {
    
    private Ferramenta objFerramenta;

    /**
     * Creates new form GerenciaFerramenta
     */
    public GerenciaFerramenta() {
        initComponents();
        this.objFerramenta = new Ferramenta();
        this.carregaTabela();
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaGerenciamentoF = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        CampoNomeGerenciaF = new javax.swing.JTextField();
        CampoMarcaGerenciamentoF = new javax.swing.JTextField();
        CampoCustoGerenciamentoF = new javax.swing.JTextField();
        BtAlterarGerenciaF = new javax.swing.JButton();
        BtApagarGerenciamentoF = new javax.swing.JButton();
        BtCancelarGerenciaF = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TabelaGerenciamentoF.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Marca", "Custo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabelaGerenciamentoF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaGerenciamentoFMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TabelaGerenciamentoF);

        jLabel1.setText("Nome");

        jLabel2.setText("Marca");

        jLabel3.setText("Custo");

        CampoCustoGerenciamentoF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoCustoGerenciamentoFActionPerformed(evt);
            }
        });

        BtAlterarGerenciaF.setText("Alterar");
        BtAlterarGerenciaF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtAlterarGerenciaFActionPerformed(evt);
            }
        });

        BtApagarGerenciamentoF.setText("Apagar");
        BtApagarGerenciamentoF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtApagarGerenciamentoFActionPerformed(evt);
            }
        });

        BtCancelarGerenciaF.setText("Cancelar");
        BtCancelarGerenciaF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtCancelarGerenciaFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CampoCustoGerenciamentoF, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CampoMarcaGerenciamentoF, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CampoNomeGerenciaF, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(BtCancelarGerenciaF)
                        .addGap(43, 43, 43)
                        .addComponent(BtAlterarGerenciaF)
                        .addGap(43, 43, 43)
                        .addComponent(BtApagarGerenciamentoF)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(CampoNomeGerenciaF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(CampoMarcaGerenciamentoF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(CampoCustoGerenciamentoF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtAlterarGerenciaF)
                    .addComponent(BtApagarGerenciamentoF)
                    .addComponent(BtCancelarGerenciaF))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BtCancelarGerenciaFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtCancelarGerenciaFActionPerformed
        // TODO add your handling code here:
       this.setVisible(false);
    }//GEN-LAST:event_BtCancelarGerenciaFActionPerformed

    private void BtAlterarGerenciaFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtAlterarGerenciaFActionPerformed
        // TODO add your handling code here:
         try {
            // recebendo e validando dados da interface gr�fica.
            int id = 0;
            String nome = "";
            String marca = "";
            String custoString = this.TabelaGerenciamentoF.getValueAt(this.TabelaGerenciamentoF.getSelectedRow(), 3).toString();
            custoString = custoString.replaceAll("[^\\d.,]", ""); // Remove caracteres não numéricos, exceto ponto e vírgula

            double custo;
            try {
                custo = Double.parseDouble(custoString.replace(",", ".")); // Substitui a vírgula pelo ponto para representar o separador decimal
            } catch (NumberFormatException e) {
                // Lidar com a exceção de formato inválido aqui
                e.printStackTrace();
            }
           


            if (this.CampoNomeGerenciaF.getText().length() < 2) {
                throw new Mensagens("Nome deve conter ao menos 2 letras.");
            } else {
                nome = this.CampoNomeGerenciaF.getText();
            }

            if (this.CampoMarcaGerenciamentoF.getText().length() < 2) {
                throw new Mensagens("A marca deve ter ao menos 2 letras");
            } else {
                marca = this.CampoMarcaGerenciamentoF.getText();
            }
            if (this.CampoCustoGerenciamentoF.getText().length() == 0) {
                throw new Mensagens("O custo nao pode ser zero");
            }else{
            custo = NumberFormat.getInstance(new Locale("pt", "BR")).parse(this.CampoCustoGerenciamentoF.getText()).doubleValue();
            }

            if (this.TabelaGerenciamentoF.getSelectedRow() == -1) {
                throw new Mensagens("Primeiro Selecione um Aluno para Alterar");
            } else {
                id = Integer.parseInt(this.TabelaGerenciamentoF.getValueAt(this.TabelaGerenciamentoF.getSelectedRow(), 0).toString());
            }

            // envia os dados para o Aluno processar
            if (this.objFerramenta.UpdateFerramentaBD(nome,marca,custo,id)) {

                // limpa os campos
                this.CampoNomeGerenciaF.setText("");
                this.CampoMarcaGerenciamentoF.setText("");
                this.CampoCustoGerenciamentoF.setText("");
                JOptionPane.showMessageDialog(rootPane, "Ferramenta Alterada com Sucesso!");

            }
            System.out.println(this.objFerramenta.getMinhaLista().toString());
        } catch (Mensagens erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        } catch (NumberFormatException erro2) {
            JOptionPane.showMessageDialog(null, "Formato nao aceito.");
        } catch (ParseException ex) {
            Logger.getLogger(GerenciaFerramenta.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            carregaTabela(); // atualiza a tabela.
        }
    }//GEN-LAST:event_BtAlterarGerenciaFActionPerformed

    private void BtApagarGerenciamentoFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtApagarGerenciamentoFActionPerformed
        // TODO add your handling code here:
         try {
            // validando dados da interface gr�fica.
            int id = 0;
            if (this.TabelaGerenciamentoF.getSelectedRow() == -1) {
                throw new Mensagens("Primeiro Selecione uma Ferramenta para APAGAR");
            } else {
                id = Integer.parseInt(this.TabelaGerenciamentoF.getValueAt(this.TabelaGerenciamentoF.getSelectedRow(), 0).toString());
            }

            // retorna 0 -> primeiro bot�o | 1 -> segundo bot�o | 2 -> terceiro bot�o
            int resposta_usuario = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja APAGAR esta Ferramenta ?");

            if (resposta_usuario == 0) {// clicou em SIM

                // envia os dados para o Aluno processar
                if (this.objFerramenta.DeleteFerramentaBD(id)) {

                    // limpa os campos
                    this.CampoNomeGerenciaF.setText("");
                    this.CampoMarcaGerenciamentoF.setText("");
                    this.CampoCustoGerenciamentoF.setText("");
                    JOptionPane.showMessageDialog(rootPane, "Ferramenta apagada com sucesso!");

                }
            }
            System.out.println(this.objFerramenta.getMinhaLista().toString());

        } catch (Mensagens erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        } finally {
            // atualiza a tabela.
            carregaTabela();
        }
    }//GEN-LAST:event_BtApagarGerenciamentoFActionPerformed

    
    
    public void carregaTabela() {

        DefaultTableModel modelo = (DefaultTableModel) this.TabelaGerenciamentoF.getModel();
        modelo.setNumRows(0);

        ArrayList<Ferramenta> minhalista = new ArrayList<>();
        minhalista = objFerramenta.getMinhaLista();

        for (Ferramenta a : minhalista) {
            modelo.addRow(new Object[]{
                a.getId(),
                a.getNome(),
                a.getMarca(),
                a.getCusto(),
                

            });
        }
    }

    /**
     * @param args the command line arguments
     */
    
    private void TabelaGerenciamentoFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaGerenciamentoFMouseClicked
        // TODO add your handling code here:
        if (this.TabelaGerenciamentoF.getSelectedRow() != -1) {

            String nome = this.TabelaGerenciamentoF.getValueAt(this.TabelaGerenciamentoF.getSelectedRow(), 1).toString();
            String marca = this.TabelaGerenciamentoF.getValueAt(this.TabelaGerenciamentoF.getSelectedRow(), 2).toString();
            String custoString = this.TabelaGerenciamentoF.getValueAt(this.TabelaGerenciamentoF.getSelectedRow(),3). toString();
            double custo = Double.parseDouble(custoString);//.replace("R$", "");
            

            // Formata o número no formato de moeda brasileira
            NumberFormat format = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));
            String custoFormatado = format.format(custo);
        
        
    



            this.CampoNomeGerenciaF.setText(nome);
            this.CampoMarcaGerenciamentoF.setText(marca);
            this.CampoCustoGerenciamentoF.setText(custoFormatado);
            

        }
    }//GEN-LAST:event_TabelaGerenciamentoFMouseClicked

    private void CampoCustoGerenciamentoFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoCustoGerenciamentoFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoCustoGerenciamentoFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GerenciaFerramenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GerenciaFerramenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GerenciaFerramenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GerenciaFerramenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GerenciaFerramenta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtAlterarGerenciaF;
    private javax.swing.JButton BtApagarGerenciamentoF;
    private javax.swing.JButton BtCancelarGerenciaF;
    private javax.swing.JTextField CampoCustoGerenciamentoF;
    private javax.swing.JTextField CampoMarcaGerenciamentoF;
    private javax.swing.JTextField CampoNomeGerenciaF;
    private javax.swing.JTable TabelaGerenciamentoF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
